// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/Nguyen-Nhat/teko-project-1",
        "contact": {
            "name": "MINH NHAT TEAM WMS",
            "url": "https://github.com/Nguyen-Nhat/teko-project-1",
            "email": "nhat.ntm@teko.vn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/author": {
            "post": {
                "description": "Create author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "author"
                ],
                "summary": "Create author",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AuthorPostDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/author/{author_id}": {
            "get": {
                "description": "Get Author By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "author"
                ],
                "summary": "Get Author By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author Id",
                        "name": "author_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/book": {
            "get": {
                "description": "Get Page Book With Filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get Page Book With Filter",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "author_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "genre_id",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            },
            "post": {
                "description": "Create book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Create book",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.BookPostDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/book/{book_id}": {
            "get": {
                "description": "Get Book Detail By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get Book Detail By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book Id",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/book/{book_id}/add-author/{author_id}": {
            "put": {
                "description": "Add Author To Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Add Author To Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book Id",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Author Id",
                        "name": "author_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/book/{book_id}/add-genre/{genre_id}": {
            "put": {
                "description": "Add Genre To Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Add Genre To Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book Id",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Genre Id",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/book/{book_id}/remove-author/{author_id}": {
            "put": {
                "description": "Remove Author From Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Remove Author From Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book Id",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Author Id",
                        "name": "author_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/book/{book_id}/remove-genre/{genre_id}": {
            "put": {
                "description": "Remove Genre From Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Remove Genre From Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book Id",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Genre Id",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/borrow-book": {
            "post": {
                "description": "Create borrow book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrow book"
                ],
                "summary": "Create borrow book",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.BorrowBookPostDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/borrow-book/detail-borrow-book": {
            "get": {
                "description": "Get Borrow Book Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrow book"
                ],
                "summary": "Get Borrow Book Details",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "day_range",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "name": "student_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/borrow-book/return/{id}": {
            "put": {
                "description": "Return Borrow Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrow book"
                ],
                "summary": "Return Borrow Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Borrow Book Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/genre": {
            "post": {
                "description": "Create genre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Create genre",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.GenrePostDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        },
        "/genre/{genre_id}": {
            "get": {
                "description": "Get Genre By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Get Genre By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre Id",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Data"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "req.AuthorPostDto": {
            "type": "object",
            "required": [
                "full_name"
            ],
            "properties": {
                "dob": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "req.BookPostDto": {
            "type": "object",
            "required": [
                "published_year",
                "title"
            ],
            "properties": {
                "published_year": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "req.BorrowBookDetailPostDto": {
            "type": "object",
            "required": [
                "book_id",
                "quantity"
            ],
            "properties": {
                "book_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "req.BorrowBookPostDto": {
            "type": "object",
            "required": [
                "borrow_book_details",
                "due_date",
                "student_id"
            ],
            "properties": {
                "borrow_book_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/req.BorrowBookDetailPostDto"
                    }
                },
                "due_date": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "req.GenrePostDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "response.Data": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API Documentation Library Service Backend",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
